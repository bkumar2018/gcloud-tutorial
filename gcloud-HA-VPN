In this lab, you learn how to perform the following tasks:

Create two VPC networks and instances.
Configure HA VPN gateways.
Configure dynamic routing with VPN tunnels.
Configure global dynamic routing mode.
Verify and test HA VPN gateway configuration.


## Task 1. Set up a Global VPC environment
In this task you set up a Global VPC with two custom subnets and two VM instances running in each zone.

# In Cloud Shell, create a VPC network called vpc-demo:
gcloud compute networks create vpc-demo --subnet-mode custom

# In Cloud Shell, create subnet vpc-demo-subnet1 in the region us-east1:
gcloud compute networks subnets create vpc-demo-subnet1 \
    --network vpc-demo --range 10.1.1.0/24 --region "us-east1"

# Create subnet vpc-demo-subnet2 in the region europe-west4:
gcloud compute networks subnets create vpc-demo-subnet2 \
    --network vpc-demo --range 10.2.1.0/24 --region europe-west4

# Create a firewall rule to allow all custom traffic within the network:
gcloud compute firewall-rules create vpc-demo-allow-custom \
    --network vpc-demo \
    --allow tcp:0-65535,udp:0-65535,icmp \
    --source-ranges 10.0.0.0/8

# Create a firewall rule to allow SSH, ICMP traffic from anywhere:
gcloud compute firewall-rules create vpc-demo-allow-ssh-icmp \
    --network vpc-demo \
    --allow tcp:22,icmp

# Create a VM instance vpc-demo-instance1 in zone us-east1-c:
gcloud compute instances create vpc-demo-instance1 --machine-type=e2-medium --zone us-east1-c --subnet vpc-demo-subnet1

# Create a VM instance vpc-demo-instance2 in zone europe-west4-b:
gcloud compute instances create vpc-demo-instance2 --machine-type=e2-medium --zone europe-west4-b --subnet vpc-demo-subnet2

## Task 2. Set up a simulated on-premises environment
In this task you create a VPC called on-prem that simulates an on-premises environment from where a customer connects to the Google cloud environment.

In Cloud Shell, create a VPC network called on-prem:
# gcloud compute networks create on-prem --subnet-mode custom

# Create a subnet called on-prem-subnet1:
gcloud compute networks subnets create on-prem-subnet1 \
    --network on-prem --range 192.168.1.0/24 --region us-east1

# Create a firewall rule to allow all custom traffic within the network:
gcloud compute firewall-rules create on-prem-allow-custom \
    --network on-prem \
    --allow tcp:0-65535,udp:0-65535,icmp \
    --source-ranges 192.168.0.0/16

# Create a firewall rule to allow SSH, RDP, HTTP, and ICMP traffic to the instances:
gcloud compute firewall-rules create on-prem-allow-ssh-icmp \
    --network on-prem \
    --allow tcp:22,icmp

# Create an instance called on-prem-instance1 in the region us-east1.
Note: In the below command replace with a zone in us-east1 but different from the one used to create the vpc-demo-instance1 in the vpc-demo-subnet1 .

gcloud compute instances create on-prem-instance1 --machine-type=e2-medium --zone us-east1-b --subnet on-prem-subnet1

## Task 3. Set up an HA VPN gateway
In this task you create an HA VPN gateway in each VPC network and then create HA VPN tunnels on each Cloud VPN gateway.

# In Cloud Shell, create an HA VPN in the vpc-demo network:
gcloud compute vpn-gateways create vpc-demo-vpn-gw1 --network vpc-demo --region us-east1

# Create an HA VPN in the on-prem network:
gcloud compute vpn-gateways create on-prem-vpn-gw1 --network on-prem --region us-east1

# View details of the vpc-demo-vpn-gw1 gateway to verify its settings:
gcloud compute vpn-gateways describe vpc-demo-vpn-gw1 --region us-east1

#View details of the on-prem-vpn-gw1 vpn-gateway to verify its settings:
gcloud compute vpn-gateways describe on-prem-vpn-gw1 --region us-east1


## Create cloud routers
# Create a cloud router in the vpc-demo network:
gcloud compute routers create vpc-demo-router1 \
    --region us-east1 \
    --network vpc-demo \
    --asn 65001

# Create a cloud router in the on-prem network:
gcloud compute routers create on-prem-router1 \
    --region us-east1 \
    --network on-prem \
    --asn 65002


## Task 4. Create two VPN tunnels
In this task you create VPN tunnels between the two gateways. For HA VPN setup, you add two tunnels from each gateway to the remote setup. You create a tunnel on interface0 and connect to interface0 on the remote gateway. Next, you create another tunnel on interface1 and connect to interface1 on the remote gateway.

When you run HA VPN tunnels between two Google Cloud VPCs, you need to make sure that the tunnel on interface0 is connected to interface0 on the remote VPN gateway. Similarly, the tunnel on interface1 must be connected to interface1 on the remote VPN gateway.

Note: In your own environment, if you run HA VPN to a remote VPN gateway on-premises for a customer, you can connect in one of the following ways:
Two on-premises VPN gateway devices: Each of the tunnels from each interface on the Cloud VPN gateway must be connected to its own peer gateway.
A single on-premises VPN gateway device with two interfaces: Each of the tunnels from each interface on the Cloud VPN gateway must be connected to its own interface on the peer gateway.
A single on-premises VPN gateway device with a single interface: Both of the tunnels from each interface on the Cloud VPN gateway must be connected to the same interface on the peer gateway.
In this lab you are simulating an on-premises setup with both VPN gateways in Google Cloud. You ensure that interface0 of one gateway connects to interface0 of the other and interface1 connects to interface1 of the remote gateway.

# Create the first VPN tunnel in the vpc-demo network:
gcloud compute vpn-tunnels create vpc-demo-tunnel0 \
    --peer-gcp-gateway on-prem-vpn-gw1 \
    --region us-east1 \
    --ike-version 2 \
    --shared-secret [SHARED_SECRET] \
    --router vpc-demo-router1 \
    --vpn-gateway vpc-demo-vpn-gw1 \
    --interface 0


# Create the second VPN tunnel in the vpc-demo network:
gcloud compute vpn-tunnels create vpc-demo-tunnel1 \
    --peer-gcp-gateway on-prem-vpn-gw1 \
    --region us-east1 \
    --ike-version 2 \
    --shared-secret [SHARED_SECRET] \
    --router vpc-demo-router1 \
    --vpn-gateway vpc-demo-vpn-gw1 \
    --interface 1

# Create the first VPN tunnel in the on-prem network:
gcloud compute vpn-tunnels create on-prem-tunnel0 \
    --peer-gcp-gateway vpc-demo-vpn-gw1 \
    --region us-east1 \
    --ike-version 2 \
    --shared-secret [SHARED_SECRET] \
    --router on-prem-router1 \
    --vpn-gateway on-prem-vpn-gw1 \
    --interface 0

# Create the second VPN tunnel in the on-prem network:
gcloud compute vpn-tunnels create on-prem-tunnel1 \
    --peer-gcp-gateway vpc-demo-vpn-gw1 \
    --region us-east1 \
    --ike-version 2 \
    --shared-secret [SHARED_SECRET] \
    --router on-prem-router1 \
    --vpn-gateway on-prem-vpn-gw1 \
    --interface 1

## Task 5. Create Border Gateway Protocol (BGP) peering for each tunnel
In this task you configure BGP peering for each VPN tunnel between vpc-demo and VPC on-prem. HA VPN requires dynamic routing to enable 99.99% availability.

# Create the router interface for tunnel0 in network vpc-demo:
gcloud compute routers add-interface vpc-demo-router1 \
    --interface-name if-tunnel0-to-on-prem \
    --ip-address 169.254.0.1 \
    --mask-length 30 \
    --vpn-tunnel vpc-demo-tunnel0 \
    --region us-east1

# Create the BGP peer for tunnel0 in network vpc-demo:
gcloud compute routers add-bgp-peer vpc-demo-router1 \
    --peer-name bgp-on-prem-tunnel0 \
    --interface if-tunnel0-to-on-prem \
    --peer-ip-address 169.254.0.2 \
    --peer-asn 65002 \
    --region us-east1

# Create a router interface for tunnel1 in network vpc-demo:
gcloud compute routers add-interface vpc-demo-router1 \
    --interface-name if-tunnel1-to-on-prem \
    --ip-address 169.254.1.1 \
    --mask-length 30 \
    --vpn-tunnel vpc-demo-tunnel1 \
    --region us-east1

#    Create the BGP peer for tunnel1 in network vpc-demo:
gcloud compute routers add-bgp-peer vpc-demo-router1 \
    --peer-name bgp-on-prem-tunnel1 \
    --interface if-tunnel1-to-on-prem \
    --peer-ip-address 169.254.1.2 \
    --peer-asn 65002 \
    --region us-


#Create a router interface for tunnel0 in network on-prem:
gcloud compute routers add-interface on-prem-router1 \
    --interface-name if-tunnel0-to-vpc-demo \
    --ip-address 169.254.0.2 \
    --mask-length 30 \
    --vpn-tunnel on-prem-tunnel0 \
    --region us-east1

#Create the BGP peer for tunnel0 in network on-prem:
gcloud compute routers add-bgp-peer on-prem-router1 \
    --peer-name bgp-vpc-demo-tunnel0 \
    --interface if-tunnel0-to-vpc-demo \
    --peer-ip-address 169.254.0.1 \
    --peer-asn 65001 \
    --region us-east1

# Create a router interface for tunnel1 in network on-prem:
gcloud compute routers add-interface  on-prem-router1 \
    --interface-name if-tunnel1-to-vpc-demo \
    --ip-address 169.254.1.2 \
    --mask-length 30 \
    --vpn-tunnel on-prem-tunnel1 \
    --region us-east1

# Create the BGP peer for tunnel1 in network on-prem:
gcloud compute routers add-bgp-peer  on-prem-router1 \
    --peer-name bgp-vpc-demo-tunnel1 \
    --interface if-tunnel1-to-vpc-demo \
    --peer-ip-address 169.254.1.1 \
    --peer-asn 65001 \
    --region us-east1


## Task 6. Verify router configurations
In this task you verify the router configurations in both VPCs. You configure firewall rules to allow traffic between each VPC and verify the status of the tunnels. You also verify private connectivity over VPN between each VPC and enable global routing mode for the VPC.

# View details of Cloud Router vpc-demo-router1 to verify its settings:
gcloud compute routers describe vpc-demo-router1 \
    --region us-east1


#Configure firewall rules to allow traffic from the remote VPC
Configure firewall rules to allow traffic from the private IP ranges of peer VPN.

#Allow traffic from network VPC on-prem to vpc-demo:
gcloud compute firewall-rules create vpc-demo-allow-subnets-from-on-prem \
    --network vpc-demo \
    --allow tcp,udp,icmp \
    --source-ranges 192.168.1.0/24

# Allow traffic from vpc-demo to network VPC on-prem:
gcloud compute firewall-rules create on-prem-allow-subnets-from-vpc-demo \
    --network on-prem \
    --allow tcp,udp,icmp \
    --source-ranges 10.1.1.0/24,10.2.1.0/24


## Verify the status of the tunnels
# List the VPN tunnels you just created:
gcloud compute vpn-tunnels list


# Verify that vpc-demo-tunnel0 tunnel is up:
gcloud compute vpn-tunnels describe vpc-demo-tunnel0 \
    --region us-east1

# Verify that vpc-demo-tunnel1 tunnel is up:
gcloud compute vpn-tunnels describe vpc-demo-tunnel1 \
    --region us-east1
Copied!
The tunnel output should show detailed status as Tunnel is up and running.

Verify that on-prem-tunnel0 tunnel is up:
gcloud compute vpn-tunnels describe on-prem-tunnel0 \
    --region us-east1
Copied!
The tunnel output should show detailed status as Tunnel is up and running.

Verify that on-prem-tunnel1 tunnel is up:
gcloud compute vpn-tunnels describe on-prem-tunnel1 \
    --region us-east1
Copied!
The tunnel output should show detailed status as Tunnel is up and running.



##Verify private connectivity over VPN
Navigate to Compute engine and note the zone in which the on-prem-instance1 was created.

Open a new Cloud Shell tab and type the following to connect via SSH to the instance on-prem-instance1: Replace <zone_name> with the zone in which the on-prem-instance1 was created.

gcloud compute ssh on-prem-instance1 --zone zone_name
Copied!
Type "y" to confirm that you want to continue.

Press Enter twice to skip creating a password.

From the instance on-prem-instance1 in network on-prem, to reach instances in network vpc-demo, ping 10.1.1.2:

ping -c 4 10.1.1.2

##Global routing with VPN
HA VPN is a regional resource and cloud router that by default only sees the routes in the region in which it is deployed. To reach instances in a different region than the cloud router, you need to enable global routing mode for the VPC. This allows the cloud router to see and advertise routes from other regions.

#Open a new Cloud Shell tab and update the bgp-routing mode from vpc-demo to GLOBAL:
gcloud compute networks update vpc-demo --bgp-routing-mode GLOBAL

# Verify the change:
gcloud compute networks describe vpc-demo

# From the Cloud Shell tab that is currently connected to the instance in network on-prem via ssh, ping the instance vpc-demo-instance2 in region europe-west4:
ping -c 2 10.2.1.2


## Task 7. Verify and test the configuration of HA VPN tunnels
In this task you will test and verify that the high availability configuration of each HA VPN tunnel is successful.

Open a new Cloud Shell tab.

# Bring tunnel0 in network vpc-demo down:

gcloud compute vpn-tunnels delete vpc-demo-tunnel0  --region us-east1

Respond "y" when asked to verify the deletion. The respective tunnel0 in network on-prem will go down.

# Verify that the tunnel is down:
gcloud compute vpn-tunnels describe on-prem-tunnel0  --region us-east1

The detailed status should show as Handshake_with_peer_broken.

# Switch to the previous Cloud Shell tab that has the open ssh session running, and verify the pings between the instances in network vpc-demo and network on-prem:
ping -c 3 10.1.1.2

Pings are still successful because the traffic is now sent over the second tunnel. You have successfully configured HA VPN tunnels.



/////

Different ways of connnecting your infrastricture to GCP,

1. Dedicated interconnect
2. Partner interconnect

3. Cloud VPN
4. Direct Peering 
5. Carrier Peering


Shared VPC [centralized admin] and VPC networking peering 

////

Load Balancing :  LB 
    Global and Regional LB 
